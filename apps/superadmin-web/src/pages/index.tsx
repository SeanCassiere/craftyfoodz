import React from "react";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { Command } from "lucide-react";

import { Icons } from "@/components/icons";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";

import { UI_CONFIG } from "@/lib/config";
import { fontSans } from "@/lib/fonts";
import { cn } from "@/lib/utils";

const Home: NextPage = () => {
  const router = useRouter();

  const handleLoginSuccess = () => {
    const redirect = router.query.redirect_url;

    if (!redirect) {
      router.push("/dashboard");
    }

    if (Array.isArray(redirect) && redirect.length && redirect[0]) {
      router.push(redirect[0]);
    }

    if (typeof redirect === "string") {
      router.push(redirect);
    }
  };

  return (
    <>
      <Head>
        <title>Admin - {UI_CONFIG.company_name}</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>
      <main
        className={cn(
          "container relative min-h-screen flex-col items-center justify-center font-sans md:grid lg:max-w-none lg:grid-cols-2 lg:px-0",
          fontSans.variable,
        )}
      >
        <div className="bg-muted relative hidden h-full flex-col p-10 text-white dark:border-r lg:flex">
          <div
            className="absolute inset-0 bg-cover"
            style={{
              backgroundImage:
                "url(https://images.unsplash.com/photo-1590069261209-f8e9b8642343?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1376&q=80)",
            }}
          />
          <div className="relative z-20 flex items-center text-lg font-medium">
            <Command className="mr-2 h-6 w-6" /> {UI_CONFIG.company_name} Admin
          </div>
        </div>
        <div className="pt-10 lg:p-8">
          <div className="mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]">
            <div className="flex flex-col space-y-2 text-center">
              <h1 className="text-2xl font-semibold tracking-tight">
                Sign in to the admin portal
              </h1>
              <p className="text-muted-foreground text-sm">
                Enter your email below to login to the {UI_CONFIG.company_name}{" "}
                admin portal.
              </p>
            </div>
            <UserAuthForm onSuccess={handleLoginSuccess} />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

interface UserAuthFormProps extends React.HTMLAttributes<HTMLDivElement> {
  onSuccess: () => void;
}

const UserAuthForm = ({
  className,
  onSuccess,
  ...props
}: UserAuthFormProps) => {
  const [isLoading, setIsLoading] = React.useState<boolean>(false);

  async function onSubmit(event: React.SyntheticEvent) {
    event.preventDefault();
    setIsLoading(true);

    setTimeout(() => {
      setIsLoading(false);
      onSuccess();
    }, 3000);
  }

  return (
    <div className={cn("grid gap-6", className)} {...props}>
      <form onSubmit={onSubmit}>
        <div className="grid gap-2">
          <div className="grid gap-1">
            <Label className="sr-only" htmlFor="email">
              Email
            </Label>
            <Input
              id="email"
              placeholder="name@example.com"
              type="email"
              autoCapitalize="none"
              autoComplete="email"
              autoCorrect="off"
              disabled={isLoading}
            />
          </div>
          <Button disabled={isLoading}>
            {isLoading && (
              <Icons.spinner className="mr-2 h-4 w-4 animate-spin" />
            )}
            Sign In with Email
          </Button>
        </div>
      </form>
    </div>
  );
};
